version: '3.8'

services:
  # Main background agent service
  otc-agent:
    build: .
    container_name: otc-agent
    restart: unless-stopped
    environment:
      # Load API key from environment
      - OPEN_TO_CLOSE_API_KEY=${OPEN_TO_CLOSE_API_KEY}
      # Optional: Set log level
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # Optional: Set environment (dev, staging, prod)
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      # Mount agent scripts (for easy updates without rebuild)
      - ./agents:/app/agents:ro
      # Mount logs directory
      - ./logs:/app/logs
    command: ["python", "/app/agents/main_agent.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import open_to_close; print('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service with hot reloading
  otc-agent-dev:
    build: .
    container_name: otc-agent-dev
    restart: "no"
    environment:
      - OPEN_TO_CLOSE_API_KEY=${OPEN_TO_CLOSE_API_KEY}
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    volumes:
      # Mount entire source for development
      - .:/app
      - ./logs:/app/logs
    command: ["python", "/app/agents/main_agent.py"]
    profiles:
      - dev

  # Monitoring service (optional)
  otc-monitor:
    build: .
    container_name: otc-monitor
    restart: unless-stopped
    environment:
      - OPEN_TO_CLOSE_API_KEY=${OPEN_TO_CLOSE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./agents:/app/agents:ro
      - ./logs:/app/logs
    command: ["python", "/app/agents/monitor_agent.py"]
    profiles:
      - monitoring

volumes:
  logs:
    driver: local

networks:
  default:
    name: otc-network 